% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_mean_AUC.R
\name{get_mean_AUC}
\alias{get_mean_AUC}
\title{Compute mean AUC value and bootstrapped confidence interval for multiple signature's mean AUC across studies}
\usage{
get_mean_AUC(
  df,
  colName,
  method = c("percentile", "empirical"),
  num.boot = 100,
  percent = 0.95
)
}
\arguments{
\item{df}{A data frame/matrix contains the interested numeric vector obtained
from \code{combine_auc}. See \code{\link[curatedTBData]{combine_auc}} for details.}

\item{colName}{A character string specifying the column name of the data frame
for bootstrapping.}

\item{method}{A character string specifying the method used for computing bootstrap confidence interval.
The choices are c("percentile","empirical"). The default is "empirical".}

\item{num.boot}{Numeric. Number of bootstrap times. Default is `100`.}

\item{percent}{A number indicates the percentage of confidence interval.
Default is `0.95`.}
}
\value{
A `data frame` contains mean AUC, lower and upper bootstrap confidence interval
for each gene signature across multiple studies.
}
\description{
Compute mean AUC value and bootstrapped confidence interval for multiple signature's mean AUC across studies
}
\examples{
returned_resources <- curatedTBData(c("GSE107104", "GSE19435", "GSE19443"),
                                    dryrun = FALSE, curated.only = TRUE)
TBsignaturesSub <- TBSignatureProfiler::TBsignatures[1:5]
re1 <- lapply(returned_resources, function(x)
                   subset_curatedTBData(x, annotationColName = "TBStatus",
                                        annotationCondition = c("Control","PTB")))
re2 <- lapply(re1, function(x)
               TBSignatureProfiler::runTBsigProfiler(input = x,
                                                     useAssay = 1,
                                                     signatures = TBsignaturesSub,
                                                     algorithm = "ssGSEA",
                                                     update_genes = FALSE))
df <- combine_auc(re2, annotationColName = "TBStatus",
                  signatureColNames = names(TBsignaturesSub),
                  num.boot = 100, percent = 0.95)
get_mean_AUC(df, colName = "AUC", method = "percentile", num.boot = 1000, percent = 0.95)
}
